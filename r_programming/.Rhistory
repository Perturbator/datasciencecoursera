perfROCR = performance(predROCR, "tpr", "fpr")
plot(perfROCR, colorize=TRUE)
# Compute AUC
performance(predROCR, "auc")@y.values
predRFcombined = predict(spamRFcombined, newdata=testCombined, class="prob")
table(testCombined$spam, predRFcombined>=.5)
predRFcombined = predict(spamRFcombined, newdata=testCombined)
table(testCombined$spam, predRFcombined>=.5)
table(testCombined$spam, predRFcombined)
predROCR = prediction(predRFcombined, testCombined$spam)
perfROCR = performance(predROCR, "tpr", "fpr")
plot(perfROCR, colorize=TRUE)
# Compute AUC
performance(predROCR, "auc")@y.values
predROCR = prediction(predRFcombined[,2], testCombined$spam)
perfROCR = performance(predROCR, "tpr", "fpr")
plot(perfROCR, colorize=TRUE)
# Compute AUC
performance(predROCR, "auc")@y.values
predROCR = prediction(predRFcombined, testCombined$spam)
perfROCR = performance(predROCR, "tpr", "fpr")
plot(perfROCR, colorize=TRUE)
# Compute AUC
performance(predROCR, "auc")@y.values
predRF[1:5]
predRFcombined = predict(spamRFcombined, newdata=testCombined, class="prob")
table(testCombined$spam, predRFcombined>=.5)
predRFcombined = predict(spamRFcombined, newdata=testCombined, class="prob")[,2]
predRFcombined = predict(spamRFcombined, newdata=testCombined, class="prob")
table(testCombined$spam, predRFcombined>=.5)
predRFcombined = predict(spamRFcombined, newdata=testCombined,type="prob")[,2]
table(testCombined$spam, predRFcombined>=.5)
predROCR = prediction(predRFcombined, testCombined$spam)
perfROCR = performance(predROCR, "tpr", "fpr")
plot(perfROCR, colorize=TRUE)
# Compute AUC
performance(predROCR, "auc")@y.values
install.packages("~/Desktop/SDSFoundations_1.1.tgz", repos = NULL)
library("SDSFoundations", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
3+8
sqrt(25)
?sqrt
x = 5
x + 3
y = x^2
sqrt(y)
x^2
x = 6^2 + 2
x^2
x <- 6 + 2
# haosdfh
x <- 6 + 2
myvariable = c(72,, 28, -9, 12, 11)
myvariable = c(72,28, -9, 12, 11)
my variable*3
myvariable*3
sqrt(myvariable)
baseball <- read.csv("~/MITx/analytics/week2/baseball.csv")
View(baseball)
View(baseball)
View(baseball)
mean(baseball$BA)
table(baseball$Playoffs)
baseball[2,5]
bawseball[,8]
baseball[,8]
table(baseball$Playoffs)
table$Playoffs == 1
table$Playoffs == '1'
baseball$Playoffs == 1
playoffs = baseball[baseball$Playoffs == 1,]
mean(pkayoffs$BA)
mean(playoffs$BA)
setwd("~/data_science/datasciencecoursera/r_programming")
hw1 = read.csv("hw1_data.csv")
nrow(hw1)
hw1[152:153,]
hw1[,"Ozone"]
hot = subset(hw1, Ozone > 31 && Temp > 90)
summary(hot)
source('~/data_science/datasciencecoursera/r_programming/week3.r')
add2(3,4)
source('~/data_science/datasciencecoursera/r_programming/week3.r')
source('~/data_science/datasciencecoursera/r_programming/week3.r')
above(1:11)
source('~/data_science/datasciencecoursera/r_programming/week3.r')
library(swirl)
swirl()
5+7
x = 5+7
x <- 5 + 7
x
y <- x - 3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555,z)
z*2 + 100
my_sqrt <- sqrt(z - 1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10, 100)
z*2 + 1000
my_div
getwd()
ls()
x <- 9
ls()
list.files()
?list.files
args(list.files())
args(list.files)
old.dir = getwd()
old.dir <- getwd()
mkdir(testdir)
dir.create(testdir)
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
file.list()
list.files()
list.files()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R","mytest2.R")
file.copy("mytest2.R", "mytest3.R")
file.path("mytest3.R")
dir.create("testdir3")
list.files()
remove("testdir3")
dir.create("testdir2/testdir3", recursive=TRUE)
file.remove("testdir2")
unlink("testdir2", recursive = TRUE)
setwd(old.dir)
unlink("testdir", recursive=TRUE)
1:20
pi:20
pi:10
15:1
?`:/
sdf
`
?`:`
seq(1,20)
?seq
seq(0,10,.5)
my_seq <- seq(5,10,length=30)
my_seq
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times = 40)
?rep
rep(c(0,1,2), times = 10)
rep(c(0,1,2), each = 10)
swirl()
library(swirl)
swirl()
num_vect <- c(.5, -55, -10, 6)
?c
num_vect <- c(0.5, -55, -10, 6)
num_vect = c(0.5, -55, -10, 6)
info()
num_vect = c(0.5, 55, -10, 6)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
c(my_char, "John")
my_name <- c(my_char, "John")
my_name
paste(my_name, collapse = " ")
past("Hello", "world!", sep = " ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X", "Y", "Z"), sep="")
paste(LETTERS, 1:4, sep = "-")
cube(3)
source('~/.active-rstudio-document')
cube(3)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
f(3)
y
source('~/data_science/datasciencecoursera/r_programming/quiz1.r')
hw1[,"Ozone"]
hw1[,"Ozone"]
source('~/data_science/datasciencecoursera/r_programming/quiz1.r', echo=TRUE)
search()
source('~/.active-rstudio-document')
f(3)
data = read.csv("specdata")
data = read.csv("specdata/1.csv")
data = read.csv("specdata/001.csv")
View(data)
summary(data)
data[,"sulfate"]
data = read.csv(dir+"/"+sprintf("%03s",i) + ".csv")
data = read.csv(paste(dir,"/",sprintf("%03s",i), ".csv")
summary(data)
data = read.csv(paste(dir,"/",sprintf("%03s",id), ".csv")
data = read.csv(paste(dir,"/",sprintf("%03s",id), ".csv"))
data = read.csv(paste(dir,"/",sprintf("%03s",id), ".csv", sep = ""))
id = 001
data = read.csv(paste(dir,"/",sprintf("%03s",id), ".csv", sep = ""))
list.files(dir)
dir = "specdata"
data = read.csv(paste(dir,"/",sprintf("%03s",id), ".csv", sep = ""))
View(data)
View(data)
View(data)
View(data)
id = 002
data = read.csv(paste(dir,"/",sprintf("%03s",id), ".csv", sep = ""))
summary(data)
sum = 0
sum = 0
num_measurements = 0
sum = sum(col_pollutant)
col_pollutant = data[,"sulfate"]
sum = sum(col_pollutant)
num_measurements = length(na.omit(col_pollutant))
avg = sum / num_measurement
avg = sum / num_measurements
avg
sum
sum = sum(na.omit(col_pollutant))
num_measurements = length(na.omit(col_pollutant))
avg = sum / num_measurements
avg
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
pollutantmean("specdata", "sulfate", 1:10)
source('~/.active-rstudio-document')
pollutantmean("specdata", "sulfate", 1:10)
source('~/.active-rstudio-document')
pollutantmean("specdata", "sulfate", 1:10)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 23)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
source("submitscript1.R")
submit()
submit()
submit()
submit()
setwd("~/data_science/datasciencecoursera/r_programming")
library(swirl)
ls
rm(list=ls())
swirl()
getwd()
ls()
x <- 9
ls()
list.files()
?list.files()
?lsit.files
?list.files
args(list.files())
args(list.files)
old.dir <- getwd()
?
jsd
f
makedir testdir
makedir(testdir)
?makedir
?dir
dir.create(testdir)
create.dir('testdir')
dir.create('testdir')
setwd('testdir')
file.create("mytest.R")
ls()
file.list()
files.list()
list.files()
ls()
file.exists("mytest.R")
file.info("mytest.R")
file.info("mytest.R")$name <- "mytest2.R"
sd
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R", "mytest3.R")
l
file.path('mytest3.R')
dir.create('testdir2')
dir.create('testdir2/testdir3', recursive = TRUE)
dir.remove('testdir2')
file.remove('testdir2')
unlink('testdir2', recursive="TRUE")
unlink('testdir2', recursive=TRUE)
setwd(old.dir)
unlink('testdir', recursive= TRUE)
x <- c(44, NA, 5, NA)
x*3
y <- rnorm(1000)
z <- rep(NA, 1000)
mydata <- smaple(c(y,z), 100)
mydata <- sample(c(y,z), 100)
my_data <- sample(c(y,z), 100)
my_na <- is.na(my_data)
my_na
my_data
my_data == NA
sum(my_na)
my_data
0/0
Inf - Inf
?data.frame
?vector
v = vector()
v
d = data.frame()
d
?complete.cases
?rbind
submit()
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
submit()
6
submit()
submit()
?list.files
swirl()
s
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x > 0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- c([1:20])
my_vector <- c(1:20)
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20, nrow = 4,  ncol = 5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
?colnames
colnames(my_data) <- cnames
my_data
TRUE == TRUE
(FALSE == TRUE) == FALSE
6==7
6 < 7
1- <=10
10 <=10
5 != 7
!(5!=7)
!(5==7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6>4)
identical('twins', 'twins')
xor(5==6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(ints)
which(ints > 7)
any(ints < 0)
all(ints > 0)
?cor
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
corr("specdata", 150)
corr("specdata", 150)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
?complete.cases
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
setwd("~/data_science/datasciencecoursera/r_programming")
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
cr
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
cr
head(cr)
?cor
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
summary(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
summary(cr)
cr <- corr("specdata", 400)
head(cr)
submit()
submit()
submit()
